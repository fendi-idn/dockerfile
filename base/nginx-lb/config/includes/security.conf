# The X-Frame-Options header indicates whether a browser should be allowed
# to render a page within a frame or iframe.
##add_header X-Frame-Options SAMEORIGIN;
#add x-frame-options from ticket #1680179 request by donny
##add_header X-Frame-Options SAMEORIGIN;
add_header X-Frame-Options "ALLOW FROM https://idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://www.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://news.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://hype.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://life.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://automotive.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://business.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://sport.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://travel.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://tech.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://men.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://health.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://food.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://science.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://fiction.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://opinion.idntimes.com";
add_header X-Frame-Options "ALLOW FROM https://popbela.com";
add_header X-Frame-Options "ALLOW FROM https://www.popbela.com";
add_header X-Frame-Options "ALLOW FROM https://storyworx.id";



# MIME type sniffing security protection
#       There are very few edge cases where you wouldn't want this enabled.
add_header X-Content-Type-Options nosniff;

# The X-XSS-Protection header is used by Internet Explorer version 8+
# The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
add_header X-XSS-Protection "1; mode=block";

# with Content Security Policy (CSP) enabled (and a browser that supports it (http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# CSP can be quite difficult to configure, and cause real issues if you get it wrong
# There is website that helps you generate a policy here http://cspisawesome.com/
# add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' https://www.google-analytics.com;";

# Prevent mobile network providers from modifying your site
#
# (!) If you are using `ngx_pagespeed`, please note that setting
# the `Cache-Control: no-transform` response header will prevent
# `PageSpeed` from rewriting `HTML` files, and, if
# `pagespeed DisableRewriteOnNoTransform off` is not used, also
# from rewriting other resources.
#
# https://developers.google.com/speed/pagespeed/module/configuration#notransform

add_header "Cache-Control" "no-transform";

# Prevent clients from accessing hidden files (starting with a dot)
# This is particularly important if you store .htpasswd files in the site hierarchy
# Access to `/.well-known/` is allowed.
# https://www.mnot.net/blog/2010/04/07/well-known
# https://tools.ietf.org/html/rfc5785
location ~* /\.(?!well-known\/) {
	deny all;
}

# Prevent clients from accessing to backup/config/source files
location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op]|config|cfg|cnf|ori|orig|backup|default|old|new|test|asli|coba|baru|lama|wow|wowrack)|~)$ {
        deny all;
}
