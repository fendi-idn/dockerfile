version: '3'

services:

### Workspace Utilities Container ###########################

    workspace:
      hostname: workspace
      image: docker-registry.idntimes.com/workspace:${PHP_VERSION}
      build:
        context: ./workspace
        dockerfile: Dockerfile-${PHP_VERSION}
      volumes:
        - ${APPLICATION_DIRECTORY}:/var/www
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
        - "contributor.idntimes.local:${DOCKER_HOST_IP}"
        - "api.idntimes.local:${DOCKER_HOST_IP}"
        - "post-api.idntimes.local:${DOCKER_HOST_IP}"
        - "user-api.idntimes.local:${DOCKER_HOST_IP}"
        - "media-api.idntimes.local:${DOCKER_HOST_IP}"
        - "general-api.idntimes.local:${DOCKER_HOST_IP}"
        - "community-api.idntimes.local:${DOCKER_HOST_IP}"
        - "search-api.idntimes.local:${DOCKER_HOST_IP}"
        - "external-api.idntimes.local:${DOCKER_HOST_IP}"
        - "log-api.idntimes.local:${DOCKER_HOST_IP}"
        - "papaya.idntimes.local:${DOCKER_HOST_IP}"
        - "redback.idntimes.local:${DOCKER_HOST_IP}"
        - "cron.popmama.local:${DOCKER_HOST_IP}"
        - "community.idntimes.local:${DOCKER_HOST_IP}"
        - "horizon.idntimes.local:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      networks:
        - frontend
        - backend

### PHP-FPM Container #######################################

    php-fpm:
      hostname: php-fpm
      image: docker-registry.idntimes.com/php-fpm:${PHP_VERSION}
      build:
        context: ./php-fpm
        dockerfile: Dockerfile-${PHP_VERSION}
      volumes:
        - ./php-fpm/config/php.ini:/usr/local/etc/php/php.ini
        - ${APPLICATION_DIRECTORY}:/var/www
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
        - "contributor.idntimes.local:${DOCKER_HOST_IP}"
        - "api.idntimes.local:${DOCKER_HOST_IP}"
        - "post-api.idntimes.local:${DOCKER_HOST_IP}"
        - "user-api.idntimes.local:${DOCKER_HOST_IP}"
        - "media-api.idntimes.local:${DOCKER_HOST_IP}"
        - "general-api.idntimes.local:${DOCKER_HOST_IP}"
        - "community-api.idntimes.local:${DOCKER_HOST_IP}"
        - "search-api.idntimes.local:${DOCKER_HOST_IP}"
        - "external-api.idntimes.local:${DOCKER_HOST_IP}"
        - "log-api.idntimes.local:${DOCKER_HOST_IP}"
        - "papaya.idntimes.local:${DOCKER_HOST_IP}"
        - "redback.idntimes.local:${DOCKER_HOST_IP}"
        - "cron.popmama.local:${DOCKER_HOST_IP}"
        - "community.idntimes.local:${DOCKER_HOST_IP}"
        - "horizon.idntimes.local:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      networks:
        - backend

### NGINX Server Container ##################################

    nginx:
      hostname: nginx
      image: docker-registry.idntimes.com/nginx:latest
      build: ./nginx
      volumes:
        - ${APPLICATION_DIRECTORY}:/var/www
        - ${NGINX_CONFIG_PATH}:/etc/nginx
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### MySQL Container #########################################

    mysql:
      hostname: mysql
      build: ./mysql
      image: docker-registry.idntimes.com/mysql:${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
        - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### MariaDB Container #######################################

    mariadb:
      hostname: mariadb
      build: ./mariadb
      image: docker-registry.idntimes.com/mariadb:${MARIADB_VERSION}
      volumes:
        - ${DATA_SAVE_PATH}/mariadb:/var/lib/mysql
        - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MARIADB_PORT}:3306"
      environment:
        - MYSQL_DATABASE=${MARIADB_DATABASE}
        - MYSQL_USER=${MARIADB_USER}
        - MYSQL_PASSWORD=${MARIADB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      networks:
        - backend

### MongoDB Container #######################################

    mongo:
      hostname: mongo
      build: ./mongo
      image: docker-registry.idntimes.com/mongo:latest
      ports:
        - "${MONGODB_PORT}:27017"
      volumes:
        - ${DATA_SAVE_PATH}/mongo:/data/db
      networks:
        - backend

### Redis Container #########################################

    redis:
      hostname: redis
      build: ./redis
      image: docker-registry.idntimes.com/redis:latest
      volumes:
        - ${DATA_SAVE_PATH}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### phpMyAdmin Container ####################################

    phpmyadmin:
      hostname: phpmyadmin
      build: ./phpmyadmin
      image: docker-registry.idntimes.com/phpmyadmin:latest
      environment:
        - PMA_ARBITRARY=1
        - MYSQL_USER=${PMA_USER}
        - MYSQL_PASSWORD=${PMA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      ports:
        - "${PMA_PORT}:80"
      depends_on:
        - "${PMA_DB_ENGINE}"
      networks:
        - frontend
        - backend

### MailDev Container #######################################

    maildev:
      hostname: maildev
      build: ./maildev
      image: docker-registry.idntimes.com/maildev:latest
      ports:
        - "${MAILDEV_HTTP_PORT}:80"
        - "${MAILDEV_SMTP_PORT}:25"
      networks:
        - frontend
        - backend

### Node JS Container #######################################

    nodejs:
      hostname: nodejs
      build: nodejs
      networks:
        - frontend
        - backend
      expose:
        - "5005"
      volumes:
        - ${APPLICATION_DIRECTORY}:/app

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mysql:
    driver: "local"
  redis:
    driver: "local"
  mariadb:
    driver: "local"
  mongo:
    driver: "local"
  phpmyadmin:
    driver: "local"
  